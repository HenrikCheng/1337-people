{"version":3,"file":"static/js/310.37fe5daf.chunk.js","mappings":"6NA2FA,EAjFqB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACtB,GAAwBC,EAAAA,EAAAA,WAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAc,WAClB,OACE,mBACEC,KAAK,SACLC,QAAS,kBAAMH,GAASD,EAAf,EACTK,UAAU,uFAHZ,UAKE,gBACEC,IAAKR,EAAOS,mBACZC,IAAG,sBAAiBV,EAAOW,MAC3BJ,UAAU,mCAKjB,EAED,OAAIL,GAAa,SAACE,EAAD,KAGf,oBACEC,KAAK,SACLC,QAAS,kBAAMH,GAASD,EAAf,EACTK,UAAU,sHAHZ,UAKGP,EAAOY,kBACN,gBACEJ,IAAKN,EAAOF,EAAOS,mBAAqBT,EAAOY,iBAC/CF,IAAI,uBACJH,UAAU,mCAGZ,SAAC,IAAD,CAAiBM,KAAMC,EAAAA,IAAQP,UAAU,4BAE3C,iBAAKA,UAAU,uDAAf,WACE,iBAAKA,UAAU,4BAAf,WACE,wBAAKP,EAAOW,QACZ,oCAAYX,EAAOe,cAErB,iBAAKR,UAAU,kCAAf,UACGP,EAAOgB,WACN,cAAGC,KAAI,+BAA0BjB,EAAOgB,UAAxC,UACE,SAAC,IAAD,CACEH,KAAMK,EAAAA,IACNX,UAAU,gCAIfP,EAAOmB,SACN,cAAGF,KAAI,6BAAwBjB,EAAOmB,QAAtC,UACE,SAAC,IAAD,CACEN,KAAMO,EAAAA,IACNb,UAAU,gCAIfP,EAAOqB,UACN,cAAGJ,KAAI,8BAAyBjB,EAAOqB,SAAvC,UACE,SAAC,IAAD,CACER,KAAMS,EAAAA,IACNf,UAAU,iCAKdP,EAAOqB,UAAYrB,EAAOmB,SAAWnB,EAAOgB,WAC5C,gBAAKT,UAAU,gBAM1B,ECrCD,EA3CyB,SAAC,GAAwB,IAAtBgB,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAChC,GAAoCvB,EAAAA,EAAAA,WAAS,GAA7C,eAAOwB,EAAP,KAAmBC,EAAnB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAI,eAAgBJ,EAC7B,GAAE,CAACA,KAGF,gBAAKlB,UAAU,oFAAf,SACGiB,EACGD,EAAKO,KAAI,SAAC9B,GAAD,OACP,iBACEO,UAAU,4BACVwB,aAAc,WACZL,GAAc,EACf,EACDM,aAAc,WACZN,GAAc,EACf,EAPH,UASG1B,EAAOW,KACPc,IACC,gBAAKlB,UAAU,wCAAf,qBAZG,IAkBTgB,EAAKO,KAAI,SAAC9B,GAAD,OACP,SAAC,EAAD,CACEA,OAAQA,GADV,UAEUA,EAAOiC,YAFjB,YAEgCjC,EAAOkC,MAFvC,YAEgDlC,EAAOgB,UAHhD,KAQlB,C","sources":["components/EmployeeCard.js","components/EmployeesDisplay.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  faLinkedin,\n  faGithubSquare,\n  faTwitterSquare,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport PropTypes from \"prop-types\";\n\nconst EmployeeCard = ({ person }) => {\n  const [open, setOpen] = useState(false);\n\n  const CardDetails = () => {\n    return (\n      <button\n        type=\"button\"\n        onClick={() => setOpen(!open)}\n        className=\"bg-white shadow-xl rounded-lg flex flex-col justify-end -translate-y-1 flex flex-col\"\n      >\n        <img\n          src={person.imageWallOfLeetUrl}\n          alt={`portrait of ${person.name}`}\n          className=\"h-full grayscale object-cover\"\n        />\n        {/* <span>{person.mainText}</span> */}\n      </button>\n    );\n  };\n\n  if (open) return <CardDetails />;\n\n  return (\n    <button\n      type=\"button\"\n      onClick={() => setOpen(!open)}\n      className=\"bg-white shadow-xl rounded-lg flex flex-col justify-end hover:-translate-y-1 duration-300 ease-in-out flex flex-col\"\n    >\n      {person.imagePortraitUrl ? (\n        <img\n          src={open ? person.imageWallOfLeetUrl : person.imagePortraitUrl}\n          alt=\"portrait of employee\"\n          className=\"h-full grayscale object-cover\"\n        />\n      ) : (\n        <FontAwesomeIcon icon={faUser} className=\"w-full h-auto bg-white\" />\n      )}\n      <div className=\"flex flex-col w-full lg:flex-row justify-between p-4\">\n        <div className=\"flex flex-col items-start\">\n          <h3>{person.name}</h3>\n          <p>Office: {person.office}</p>\n        </div>\n        <div className=\"space-x-2 py-2 flex flex-nowrap\">\n          {person.linkedIn && (\n            <a href={`https://linkedIn.com/${person.linkedIn}`}>\n              <FontAwesomeIcon\n                icon={faLinkedin}\n                className=\"fa-xl hover:text-gray-500\"\n              />\n            </a>\n          )}\n          {person.gitHub && (\n            <a href={`https://github.com/${person.gitHub}`}>\n              <FontAwesomeIcon\n                icon={faGithubSquare}\n                className=\"fa-xl hover:text-gray-500\"\n              />\n            </a>\n          )}\n          {person.twitter && (\n            <a href={`https://twitter.com/${person.twitter}`}>\n              <FontAwesomeIcon\n                icon={faTwitterSquare}\n                className=\"fa-xl hover:text-gray-500\"\n              />\n            </a>\n          )}\n\n          {!person.twitter && !person.gitHub && !person.linkedIn && (\n            <div className=\"h-6\" />\n          )}\n        </div>\n      </div>\n    </button>\n  );\n};\n\nEmployeeCard.propTypes = {\n  person: PropTypes.object.isRequired,\n};\n\nexport default EmployeeCard;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport EmployeeCard from \"./EmployeeCard\";\n\nconst EmployeesDisplay = ({ data, showList }) => {\n  const [isHovering, setIsHovering] = useState(false);\n\n  useEffect(() => {\n    console.log(\"isHovering: \", isHovering);\n  }, [isHovering]);\n\n  return (\n    <div className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 2xl:grid-cols-6 gap-4 lg:gap-6 p-4\">\n      {showList\n        ? data.map((person) => (\n            <div\n              className=\"hover:bg-red-500 relative\"\n              onMouseEnter={() => {\n                setIsHovering(true);\n              }}\n              onMouseLeave={() => {\n                setIsHovering(false);\n              }}\n            >\n              {person.name}\n              {isHovering && (\n                <div className=\"fixed top-0 left-0 right-0 bg-red-500\">\n                  Hello\n                </div>\n              )}\n            </div>\n          ))\n        : data.map((person) => (\n            <EmployeeCard\n              person={person}\n              key={`${person.phoneNumber}_${person.email}_${person.linkedIn}`}\n            />\n          ))}\n    </div>\n  );\n};\n\nEmployeesDisplay.propTypes = {\n  data: PropTypes.array,\n  showList: PropTypes.bool,\n};\n\nexport default EmployeesDisplay;\n"],"names":["person","useState","open","setOpen","CardDetails","type","onClick","className","src","imageWallOfLeetUrl","alt","name","imagePortraitUrl","icon","faUser","office","linkedIn","href","faLinkedin","gitHub","faGithubSquare","twitter","faTwitterSquare","data","showList","isHovering","setIsHovering","useEffect","console","log","map","onMouseEnter","onMouseLeave","phoneNumber","email"],"sourceRoot":""}